@{
    ViewData["Title"] = "About";
}

<style>
    .center {
        display: block;
        margin-left: auto;
        margin-right: auto;
        width: 50%;
    }
</style>

<img id="logo" src="~/images/cu-online.png" />

<div id="content">
    <h2>@ViewData["Title"]</h2>
    <hr />
    <p>
        This tool provides takes the data from individual students
        <a href="https://community.canvaslms.com/docs/DOC-2864" , target="_blank">access reports</a>
        and aggregates them into a single, course-level report.
        It is an extension of <a href="https://community.canvaslms.com/docs/DOC-6061" target="_blank"> this tool</a>,
        providing a categorized, sortable interface, in addition to the data export functionality.
    </p>

    <h3>Usage</h3>
    <hr />
    <p>
        If already installed in your Canvas instance, you can access a usage data by going
        to a course's "People" page and selecting "Access Report Data" from the cog dropdown in the upper right corner.
    </p>
    <img src="~/images/people-page-example.png" width="100%" />

    <h3>Installation</h3>
    <hr />
    <p>
        This tool integrates with Canvas via custom javascript, rather than the traditional LTI integration.
        To make it available in Canvas, you'll need to add the javascript code found
        <a href='~/js/access-report.js' , target='_blank'>here</a>
        to your Canvas instance's custom javascript.
    </p>

    <p>
        To edit your instance's custom javascript, go to the main account page and select the "Themes"
        button on left-hand navigation bar. Open the current theme in the Theme Editor.

        <img src="~/images/theme-editor-example.png" class="center" />
        <br/>
        From here you will find an option to upload a javascript file: <br/>
        <img src="~/images/custom-javascript-example.png" class="center" />
    </p>

    <p>
        If a file is already uploaded (i.e. there is a "View File" link with existing content), be sure
        to include the existing content in your uploaded javascript file, or it will be overwritten and lost.
        The most straightforward way to add the needed code is to have your custom Canvas javascript load it
        directly from this site.
    </p>

    <p>
        <a href="~/js/canvas-example.js">Here</a> is an example of javascript code that will achieve this.
    </p>

    <p>
        Alternatively, you can copy & paste the entirety of
        <a href="~/js/access-report.js" target="_blank">the code</a>
        into your custom Canvas javascript.
        And lastly, if you would like to use the tool personally without enabling it for all Canvas users, you can run the script yourself using a tool like
        <a href="https://addons.mozilla.org/en-US/firefox/addon/greasemonkey" target="_blank">Greasemonkey</a>.
    </p>
</div>